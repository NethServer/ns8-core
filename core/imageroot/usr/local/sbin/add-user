#!/usr/bin/env python3

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import sys
import agent
import argparse
import hashlib
import getpass

parser = argparse.ArgumentParser()
parser.add_argument('user')
parser.add_argument('--role', required=True)
parser.add_argument('--password', default=False, help="If not given, the password is read from stdin")

args = parser.parse_args()

rdb = agent.redis_connect(privileged=True)

if args.password is False:
    password = getpass.getpass()
else:
    password = args.password

# Create the admin user and set a password
exit_code, output, error = agent.run_subtask(rdb,
    agent_prefix='cluster',
    action='add-user',
    input_obj= {
        "user": args.user,
        "password_hash": hashlib.sha256(password.encode()).hexdigest(),
        "grant": [{"role":args.role,"on":"*"}],
    },
)
if exit_code != 0:
    print("The action add-user has failed:")
    sys.stdout.write(output)
    sys.stderr.write(error)
    sys.exit(exit_code)
