#!/usr/bin/env python3

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import os
import sys
import json
import agent
import uuid
import hashlib

def save_environment(env):
    with open('state/environment', 'w') as envf:
        for envk, envv in env.items():
            envf.write(f"{envk}={envv}\n")

def save_agent_env(module_id, bin_path=None):
    """Generate and persist the Redis password for module_id
    """
    oldmask = os.umask(0o77)
    redis_password = str(uuid.uuid4())
    with open('state/agent.env', 'w') as agentenv:
        if bin_path:
            system_path = os.getenv('PATH', '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin')
            agentenv.write(f'PATH={bin_path}:{system_path}\n')
        agentenv.write(f'REDIS_USER=module/{module_id}\n')
        agentenv.write(f'REDIS_PASSWORD={redis_password}\n')
    os.umask(oldmask)
    return hashlib.sha256(redis_password.encode()).hexdigest()

request = json.load(sys.stdin)
module_id = request['module_id']
is_rootfull = request['is_rootfull']
module_environment = request['environment']
image_url = module_environment['IMAGE_URL']

# Launch the module agent (async)
if is_rootfull:
    # Create the module dirs structure
    os.mkdir(f'/var/lib/nethserver/{module_id}/')
    os.mkdir(f'/var/lib/nethserver/{module_id}/state', mode=0o700)
    # Extract the module imageroot
    os.chdir(f'/var/lib/nethserver/{module_id}')
    save_environment(module_environment)
    redis_sha256 = save_agent_env(module_id, f'/var/lib/nethserver/{module_id}/bin')
    agent.run_helper('extract-image', image_url).check_returncode()
    # Start the module agent
    agent.run_helper('systemctl', 'enable', '--now', f'agent@{module_id}.service').check_returncode()
else: # rootless
    # Create the module dirs structure
    agent.run_helper('useradd', '-m', '-k', '/etc/nethserver/skel', '-s', '/bin/bash', module_id).check_returncode()
    os.chdir(f'/home/{module_id}/.config')
    save_environment(module_environment)
    redis_sha256 = save_agent_env(module_id, f'/home/{module_id}/.config/bin')
    # Extract the module imageroot and fix CWD permissions recursively
    agent.run_helper('extract-image', image_url).check_returncode()
    # Start the module agent
    agent.run_helper('loginctl', 'enable-linger', module_id).check_returncode()

json.dump({
    "redis_sha256":redis_sha256,
}, sys.stdout)
