#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import agent
import agent.tasks
import os
import re

rdb = agent.redis_connect(privileged=True)
is_metrics_installed = rdb.exists(f"node/{os.getenv('NODE_ID')}/default_instance/metrics")

if not is_metrics_installed:
    # Remove node_exporter modules: they will conflict with the new metrics module
    for module in rdb.hgetall("cluster/module_node").items():
        # if module name matches node_exporter<number>, remove it
        if re.match(r"node_exporter\d+", module[0]):
            agent.tasks.run('cluster', 'remove-module', data={
                "module_id": module[0],
                "preserve_data": False,
                "force": True,
            }, endpoint="redis://cluster-leader")

    # Install metrics module
    add_module_failures = agent.tasks.runp_brief([
        {"agent_id": "cluster", "action": "add-module", "data": {
            'image': 'metrics',
            'node': int(os.getenv("NODE_ID")),
        }}],
        endpoint = "redis://cluster-leader",
    )
    agent.assert_exp(add_module_failures == 0)
