#!/usr/bin/env python3

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import agent
import agent.tasks
import os
import sys
import json

request = json.load(sys.stdin)

rdb = agent.redis_connect(privileged=False)

network = request['network']
node_id = request['node_id']

# Build the task requests, one for each node
tasks = [{
    'agent_id': knode[0:-len('/vpn')],
    'action': 'update-routes',
    'data': [{
        "add": [network],
        "remove": [],
        "node_id": node_id,
    }],
} for knode in rdb.scan_iter('node/*/vpn')]

# Parallel tasks run
results = agent.tasks.runp(
    tasks,
    endpoint="redis://cluster-leader",
)

for result in results:
    agent.assert_exp(result['exit_code'] == 0)

print("true") # Honor output JSON schema
