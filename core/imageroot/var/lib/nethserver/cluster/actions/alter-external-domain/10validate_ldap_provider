#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import sys
import json
import agent
import os
import cluster.userdomains

#
# Sample request:
# {
# "domain":"example.com",
# "protocol": "ldap",
# "bind_dn": "cn=ldapservice,dc=example,dc=com",
# "bind_password": "s3cret",
# "tls": true,
# "tls_verify": true
# }
request = json.load(sys.stdin)
domain = request['domain']
protocol = request['protocol']
rdb = agent.redis_connect(privileged=False)

agent.set_weight(os.path.basename(__file__), 0) # Validation step, no task progress at all

if protocol == 'ldap':
    conf = rdb.hgetall(f"cluster/user_domain/ldap/{domain}/conf")
    # Get the first provider: ["x.x.x.x:636"]
    providers = rdb.lrange(f"cluster/user_domain/ldap/{domain}/providers", 0, -1)
    host = providers[0].split(':')[0]
    port = providers[0].split(':')[1]

    validate= {
        'bind_dn': request['bind_dn'],
        'bind_password': request['bind_password'],
        'tls': request['tls'],
        'tls_verify': request['tls_verify'],
        'domain': domain,
        'protocol': protocol,
        'host': host,
        'port': int(port),
        'schema':conf['schema'],
        'base_dn': conf['base_dn']
    }

    errors, logex = cluster.userdomains.validate_ldap(validate)

    if logex:
        print(agent.SD_ERR + f"{logex.__class__.__name__}: {logex}", file=sys.stderr)

    if errors:
        agent.set_status('validation-failed')
        json.dump(errors, fp=sys.stdout)
        sys.exit(3)
