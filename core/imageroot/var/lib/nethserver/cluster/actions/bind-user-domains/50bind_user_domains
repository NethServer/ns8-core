#!/usr/bin/env python3

#
# Copyright (C) 2024 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import sys
import json
import agent
import os
from agent.ldapproxy import Ldapproxy

request = json.load(sys.stdin)

lp = Ldapproxy()
domains = lp.get_domains_list()

domain_list = request["domains"]
module_id = os.environ["AGENT_TASK_USER"].removeprefix('module/')

rdb = agent.redis_connect(privileged=False)
try:
    test = int(rdb.hget(f'module/{module_id}/environment', 'NODE_ID'))
except Exception as ex:
    print(f"Error: to validate a module_id instance {ex}", file=sys.stderr)
    sys.exit(0)

previous_domains = rdb.hget(f'cluster/module_domains', module_id) or ""

rdb = agent.redis_connect(privileged=True)
# we test if the domain_list is included in the list of domains
is_included = set(domain_list).issubset(set(domains))

if not is_included:
    agent.set_status('validation-failed')
    json.dump([{'field':'domains', 'parameter':'domains','value': domain_list, 'error':'not_included_in_the_domains_list'}], fp=sys.stdout)
    # we print the error message in logs
    print(agent.SD_WARNING + f"Error: the domain_list {domain_list} is not included in the list of domains {domains}", file=sys.stderr)
    sys.exit(3)

rdb.hset(f'cluster/module_domains', module_id, " ".join(domain_list))

union_domains = set(domain_list) | set(previous_domains.split())

agent_id = os.environ['AGENT_ID']
trx = rdb.pipeline()
trx.publish(agent_id + '/event/module-domain-changed', json.dumps({
    "modules": [module_id],
    "domains": list(union_domains)
}))
trx.execute()
