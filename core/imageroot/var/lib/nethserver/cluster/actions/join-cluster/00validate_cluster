#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import agent.tasks
from aiohttp import ClientConnectorCertificateError, ClientResponseError

request = json.load(sys.stdin)

rdb = agent.redis_connect()

network = rdb.get('cluster/network')

if network:
    agent.set_status('validation-failed')
    print(agent.SD_ERR + "Cannot join another cluster: Run the uninstall procedure then install NS8 again.", file=sys.stderr)
    json.dump([{'field':'url', 'parameter':'url','value': request['url'], 'error':'cluster_network_already_set'}], fp=sys.stdout)
    sys.exit(2)

try:
    validate_auth = agent.tasks.run(
        agent_id='cluster',
        action='list-actions',
        extra={
            "title": f"New node authentication probe",
            "description": "",
            "isNotificationHidden": True,
        },
        parent='', # Our AGENT_TASK_ID is useless in another cluster: force parent to empty string
        endpoint=request['url'].strip('/') + '/cluster-admin',
        tls_verify=request['tls_verify'],
        auth_token=request['jwt'],
    )
except ClientConnectorCertificateError:
    agent.set_status('validation-failed')
    json.dump([{'field':'tls_verify', 'parameter':'tls_verify','value': request['tls_verify'], 'error':'cluster_tls_verify_error'}], fp=sys.stdout)
    sys.exit(3)
except ClientResponseError:
    agent.set_status('validation-failed')
    json.dump([{'field':'jwt', 'parameter':'jwt','value': '***', 'error':'cluster_auth_error'}], fp=sys.stdout)
    sys.exit(4)
