#!/usr/bin/env python3

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import sys
import json
import agent
import subprocess
import os

request = json.load(sys.stdin)

popen_args={"encoding": 'utf-8', "stdout": subprocess.PIPE, "stderr": sys.stderr}

rclone_cmd = ['rclone-wrapper', request['repository'], 'lsjson']

backups = dict()
proot = subprocess.Popen(rclone_cmd + ["REMOTE_PATH"], **popen_args)
for oroot in json.load(proot.stdout):
    if oroot["IsDir"] is False:
        continue # skip non-dir entries
    pchild = subprocess.Popen(rclone_cmd + ["REMOTE_PATH/" + oroot['Path']], **popen_args)
    for backup in json.load(pchild.stdout):
        if not '@' in backup["Path"] or backup["IsDir"] is False:
            continue # skip non-repo entries
        backups.setdefault(oroot['Path'], [])
        backups[oroot['Path']].append(backup['Path'])

print(json.dumps(backups))
