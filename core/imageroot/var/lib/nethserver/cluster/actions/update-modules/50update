#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import agent
import sys
import os
import agent.tasks
import cluster.modules as lmods

rdb = agent.redis_connect()

modules = []
for mf in rdb.scan_iter('module/*/flags'):
    flags = rdb.smembers(mf)
    if 'core_module' in flags:
        continue

    module_id = mf.removeprefix('module/').removesuffix('/flags')
    modules.append(module_id)

step = len(modules)
start = 5
errors = 0
for module in modules:
    image_name = agent.get_image_name_from_url(rdb.hget(f'module/{module}/environment', 'IMAGE_URL'))
    try:
        image_url = lmods.get_latest_module(image_name, rdb)
    except lmods.LatestModuleLookupError:
        continue

    upd_module_result = agent.tasks.run("cluster", "update-module",
        data={"instances": [module], "image_url": image_url},
        endpoint="redis://cluster-leader",
        progress_callback=agent.get_progress_callback(start, start + step)
    )
    start = start + step + 1
    if upd_module_result['exit_code'] != 0:
        print(agent.SD_ERR + f"Failed update-module for instance {module} from image {image_url}", file=sys.stderr)
        errors += 1

if errors > 0:
    sys.exit(2)
