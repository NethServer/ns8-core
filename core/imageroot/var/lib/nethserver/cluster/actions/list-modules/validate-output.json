{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "list-modules output",
  "description": "List modules output",
  "$id": "http://schema.nethserver.org/cluster/list-modules-output.json",
  "examples": [
    [
      {
        "name": "dokuwiki",
        "description": {
          "en": "Auto-generated description for traefik"
        },
        "logo": "http://127.0.0.1:8000/logo.png",
        "screenshots": [
          "http://127.0.0.1:8000/screenshots/template%3Adokuwiki_template.png"
        ],
        "categories": [
          "unknown"
        ],
        "authors": [
          {
            "name": "unknown",
            "email": "info@nethserver.org"
          }
        ],
        "docs": {
          "documentation_url": "https://docs.nethserver.org",
          "bug_url": "https://github.com/NethServer/dev",
          "code_url": "https://github.com/NethServer/"
        },
        "source": "ghcr.io/nethserver/dokuwiki",
        "versions": [
          {
            "tag": "0.0.2",
            "testing": false,
            "labels": {
              "io.buildah.version": "1.19.6",
              "org.nethserver.rootfull": "0",
              "org.nethserver.tcp_ports_demand": "1"
            }
          },
          {
            "tag": "0.0.1",
            "testing": false,
            "labels": {
              "io.buildah.version": "1.19.6",
              "org.nethserver/rootfull": "0",
              "org.nethserver/tcp_ports_demand": "1"
            }
          },
          {
            "tag": "0.0.1-alpha1",
            "testing": true,
            "labels": {
              "io.buildah.version": "1.19.6",
              "org.nethserver/rootfull": "0",
              "org.nethserver/tcp_ports_demand": "1"
            }
          }
        ],
        "repository": "t3",
        "repository_updated": "Mon, 28 Jun 2021 14:42:44 GMT",
        "install_destinations": [
          {
            "node_id": 1,
            "instances": 2,
            "eligible": true,
            "reject_reason": null
          }
        ],
        "certification_level": 2,
        "rootfull": false,
        "updates": [
          {
            "id": "dokuwiki2",
            "node": "1",
            "digest": "sha256:929465c177d9e40559b3fa838f2e429060ff7e8c3e4e1a12076b3304ad562982",
            "source": "ghcr.io/nethserver/dokuwiki",
            "version": "0.0.1-alpha1",
            "update": "0.0.2"
          }
        ],
        "disabled_updates_reason": "",
        "installed": [
          [
            {
              "id": "dokuwiki2",
              "node": "1",
              "digest": "sha256:929465c177d9e40559b3fa838f2e429060ff7e8c3e4e1a12076b3304ad562982",
              "source": "ghcr.io/nethserver/dokuwiki",
              "version": "0.0.1-alpha1"
            },
            {
              "id": "dokuwiki1",
              "node": "1",
              "digest": "sha256:929465c177d9e40559b3fa838f2e429060ff7e8c3e4e1a12076b3304ad562982",
              "source": "ghcr.io/nethserver/dokuwiki",
              "version": "0.0.1-alpha1"
            }
          ]
        ]
      }
    ]
  ],
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "Unique name of a package"
      },
      "upstream_name": {
        "type": "string",
        "description": "The alternative software name and version number, if they differ from the package name and version",
        "example": "Nextcloud Hub 7"
      },
      "certification_level": {
        "type": "integer",
        "description": "The higher, the better: 0=unknown certification, 5=max"
      },
      "rootfull": {
        "type": "boolean",
        "description": "True if the application gains full OS privileges when installed"
      },
      "description": {
        "type": "object",
        "description": "A map of language codes (eg. en, it) with the translated description"
      },
      "logo": {
        "type": [
          "string",
          "null"
        ],
        "description": "The filename of the logo. The logo must be a PNG image of 256x256 pixels"
      },
      "categories": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "authors": {
        "type": "array",
        "items": {
          "type": "object",
          "parameters": {
            "name": {
              "type": "string",
              "description": "Author full name"
            },
            "email": {
              "type": "idn-email",
              "description": "Author mail address"
            }
          }
        }
      },
      "docs": {
        "type": "object",
        "parameters": {
          "terms_url": {
            "type": "string",
            "format": "uri",
            "description": "Optional link to the application Terms & Conditions document"
          },
          "documentation_url": {
            "type": "string",
            "format": "uri",
            "description": "Link to the package documentation"
          },
          "bug_url": {
            "type": "string",
            "format": "uri",
            "description": "Link to the package issue tracker"
          },
          "code_url": {
            "type": "string",
            "format": "uri",
            "description": "Link to the source code repository"
          }
        },
        "required": [
          "documentation_url",
          "bug_url",
          "code_url"
        ]
      },
      "source": {
        "type": "string",
        "description": "URL of package inside a container registry. The URL must not contain the prefix 'docker://' or similar"
      },
      "repository": {
        "type": "string",
        "description": "The internal ID of the repository inside redis"
      },
      "repository_updated": {
        "type": "string",
        "description": "Date and time of last modification to remote repodata"
      },
      "disabled_updates_reason": {
        "enum": [
          "",
          "ns7_migration"
        ],
        "description": "A non-empty strings indicates that updates are disabled for some reason. The string value identifies the reason."
      },
      "updates": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique name of a module instance"
            },
            "node": {
              "type": "string",
              "description": "Id of the node where the instance is running"
            },
            "digest": {
              "type": "string",
              "description": "Image digest"
            },
            "source": {
              "type": "string",
              "description": "The URL of the container image registry"
            },
            "version": {
              "type": "string",
              "description": "A valid semantic version extracted from image tag"
            },
            "testing_update": {
              "type": "string",
              "description": "A semver prerelease tag, greater than 'version' field"
            },
            "update": {
              "type": "string",
              "description": "A semver tag greater than 'version' field"
            }
          },
          "required": [
            "id",
            "node",
            "digest",
            "source",
            "version"
          ]
        }
      },
      "install_destinations": {
        "description": "Describe for each node of the cluster if the node is eligible or not to install a new module instance. If not, a reject reason is returned.",
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "node_id",
            "instances",
            "eligible",
            "reject_reason"
          ],
          "properties": {
            "node_id": {
              "type": "integer",
              "description": "Node identifier"
            },
            "instances": {
              "type": "integer",
              "description": "Number of module instances currently installed on the node"
            },
            "eligible": {
              "type": "boolean",
              "description": "True if another instance of the module can be installed on the node"
            },
            "reject_reason": {
              "type": [
                "object",
                "null"
              ],
              "descripton": "If it is an object, it tells why the node is not eligible to host a module instance",
              "properties": {
                "message": {
                  "type": "string"
                },
                "parameter": {
                  "type": "string"
                }
              },
              "required": [
                "message",
                "parameter"
              ]
            }
          }
        }
      },
      "installed": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique name of a module instance"
            },
            "node": {
              "type": "string",
              "description": "Id of the node where the instance is running"
            },
            "digest": {
              "type": "string",
              "description": "Image digest"
            },
            "source": {
              "type": "string",
              "description": "The URL of the container image registry"
            },
            "version": {
              "type": "string",
              "description": "A valid semantic version extracted from image tag"
            }
          },
          "required": [
            "id",
            "node",
            "digest",
            "source",
            "version"
          ]
        }
      },
      "no_version_reason": {
        "type": "object",
        "description": "If the versions array is empty, this object is present and explains why.",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "Reason identifier"
          },
          "params": {
            "type": "object",
            "description": "Parameters for the reason explanation",
            "patternProperties": {
              ".": {
                "type": "string"
              }
            }
          }
        }
      },
      "versions": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "tag": {
              "type": "string",
              "description": "The package version which must be valid semantic version, like '1.0.0"
            },
            "testing": {
              "type": "boolean",
              "description": "Set to 'true' if this version is pre-release according to semantic versioning (https://semver.org)"
            },
            "labels": {
              "type": "object",
              "description": "Image label, see official specification https://github.com/opencontainers/image-spec/blob/master/annotations.md"
            }
          },
          "required": [
            "tag",
            "testing",
            "labels"
          ]
        }
      }
    },
    "required": [
      "name",
      "description",
      "logo",
      "categories",
      "authors",
      "docs",
      "source",
      "certification_level",
      "rootfull",
      "versions",
      "install_destinations",
      "installed",
      "updates"
    ]
  }
}
