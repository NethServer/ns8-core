#!/usr/bin/env python3

#
# Copyright (C) 2024 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import sys
import agent
import cluster.grants

rdb = agent.redis_connect(privileged=True)

#
# Update existing grants for features #6814, #6825, #6852
#
cluster.grants.grant(rdb, action_clause="bind-user-domains",  to_clause="accountconsumer", on_clause='cluster')
cluster.grants.grant(rdb, action_clause="bind-user-domains",  to_clause="accountprovider", on_clause='cluster')
cluster.grants.grant(rdb, action_clause="list-modules",  to_clause="accountprovider", on_clause='cluster')

#
# Reuse and reallocate TCP/UDP port range #6974
#
for node_id in set(rdb.hvals('cluster/module_node')):
    cluster.grants.grant(rdb, "allocate-ports", f'node/{node_id}', "portsadm")
    cluster.grants.grant(rdb, "deallocate-ports", f'node/{node_id}', "portsadm")
    cluster.grants.grant(rdb, "allocate-ports", f'node/{node_id}', "fwadm,portsadm")
    cluster.grants.grant(rdb, "deallocate-ports", f'node/{node_id}', "fwadm,portsadm")
    cluster.grants.grant(rdb, "add-public-service", f'node/{node_id}', "fwadm,portsadm")
    cluster.grants.grant(rdb, "remove-public-service", f'node/{node_id}', "fwadm,portsadm")
    cluster.grants.grant(rdb, "add-custom-zone", f'node/{node_id}', "fwadm,portsadm")
    cluster.grants.grant(rdb, "remove-custom-zone", f'node/{node_id}', "fwadm,portsadm")
    cluster.grants.grant(rdb, "allocate-ports", f'node/{node_id}', "tunadm,portsadm")
    cluster.grants.grant(rdb, "deallocate-ports", f'node/{node_id}', "tunadm,portsadm")
    cluster.grants.grant(rdb, "add-tun", f'node/{node_id}', "tunadm,portsadm")
    cluster.grants.grant(rdb, "remove-tun", f'node/{node_id}', "tunadm,portsadm")
    cluster.grants.grant(rdb, "add-public-service", f'node/{node_id}', "tunadm,portsadm")
    cluster.grants.grant(rdb, "remove-public-service", f'node/{node_id}', "tunadm,portsadm")
    cluster.grants.grant(rdb, "add-custom-zone", f'node/{node_id}', "tunadm,portsadm")
    cluster.grants.grant(rdb, "remove-custom-zone", f'node/{node_id}', "tunadm,portsadm")
#
# END of grant updates
#
cluster.grants.refresh_permissions(rdb)
