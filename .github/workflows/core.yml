name: core
on:
  push:
    paths-ignore:
      - 'docs/**'
      - 'infra/**'
      - 'core/tests/**'
      - 'core/test-module.sh'

jobs:
  push_image:
    env:
      REPONAME: ${{ github.workflow }}
      IMAGETAG: ${{ github.ref_name }}
    name: 'Build ${{ github.workflow }}'
    runs-on: ubuntu-latest
    steps:
      - id: info
        name: "Retrieve runtime information"
        run: |
          echo "::set-output name=images-dir::$(buildah info --format '{{.store.GraphRoot}}/overlay-images')"
          echo "::set-output name=weekstamp::$(date +%YW%W)"
          echo "::set-output name=org::$(dirname ${GITHUB_REPOSITORY} | tr '[:upper:]' '[:lower:]')"
      - id: checkout
        uses: actions/checkout@v2
      - id: corecache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.info.outputs.images-dir }}
            ${{ github.workflow }}/.golang-cache
            ${{ github.workflow }}/ui/node_modules
          key: "corecache-${{ steps.info.outputs.weekstamp }}-${{ hashFiles('core/ui/yarn.lock', 'core/agent/go.*', 'core/api-server/go.*', 'core/build-image.sh') }}"
      - id: build
        name: "Build the images"
        run: "cd ${REPONAME} && bash build-image.sh"
        env:
          REPOBASE: ghcr.io/${{ steps.info.outputs.org }}
      - id: push
        name: "Push the images"
        run: |
          # Push the images
          trap 'buildah logout ghcr.io' EXIT
          buildah login -u ${{ github.actor }} --password-stdin ghcr.io <<<"${{ secrets.GITHUB_TOKEN }}"
          for image in ${{ steps.build.outputs.images }} ; do buildah push $image docker://${image}:${IMAGETAG:?is missing} ; done
