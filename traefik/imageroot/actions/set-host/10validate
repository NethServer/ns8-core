#!/usr/bin/env python3

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

#
# Validate a virtual host configuration
# Input example:
#  {"instance": "module1", "url": "http://127.0.0.0:2000", "host": "module.example.org", "lets_encrypt": true, "http2https": true} 
#

import json
import sys
import agent

# Push validation errors to this list
errors = []

# Try to parse the stdin as JSON.
# If parsing fails, exit early and dump the error stack.
data = json.load(sys.stdin)

# Allo fields are mandatory
for field in ["instance", "url", "host", "lets_encrypt", "http2https"]:
    if not data.get(field, ""):
        errors.append({"parameter": field, "value": "", "error": "%s_is_empty" % field})

# Set failed validation if errors is non empty
if errors:
    # Dump the errors in JSON format to the stdout
    print(json.dumps(errors))
    # Inform the agent
    agent.set_status("validation-failed")
    # Below line is optional: if not set, 10 is the default exit code when validation fails
    sys.exit(10)
