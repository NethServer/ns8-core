#!/usr/bin/env python3

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import agent
import agent.tasks
import os
import sys

agent.assert_exp(os.environ['REALM'])
agent.assert_exp(os.environ['IPADDRESS'])
agent.assert_exp(os.environ['HOSTNAME'])

rdb = agent.redis_connect(privileged=False)

# Prepare the list of tasks to run in parallel
tasks = []
for key in rdb.scan_iter(match='module/samba*/environment'):
    if key == f"{os.getenv('AGENT_ID')}/environment":
        continue # skip DC itself
    elif rdb.hget(key, 'REALM') != os.environ['REALM']:
        continue # skip DCs of other realms

    peer_agent_id = key.stripsuffix('/environment')
    tasks.append({
        'agent_id': peer_agent_id,
        'action': 'add-dc',
        'data': {
            'ipaddress': os.environ['IPADDRESS'],
            'hostname': os.environ['HOSTNAME'],
        },
    })

errors = agent.tasks.runp_brief(tasks)
agent.assert_exp(errors == 0)
