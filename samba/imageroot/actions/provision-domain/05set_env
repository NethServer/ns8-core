#!/usr/bin/env python3

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import agent
import json
import sys
import os
import secrets
import string

request = json.load(sys.stdin)
realm = request['realm'].upper()

rdb = agent.redis_connect()

# Lookup a DC for the given realm
for ksamba in rdb.scan_iter(f'module/samba*/environment'):
    penv = rdb.hgetall(ksamba)
    if penv.get('REALM', '') == realm:
        provision_type = 'join-domain'
        nbdomain = penv['NBDOMAIN']
        svcpass = penv['SVCPASS']
        break
else: # No DC found for the realm. Create a new AD domain
    provision_type = 'new-domain'
    try:
        nbdomain = request['nbdomain'].upper()
    except KeyError as ex:
        json.dump({"parameter": 'nbdomain', "value": None, "error": "missing_parameter"}, fp=sys.stdout)
        agent.set_status('validation-failed')
        sys.exit(7)

    # Generate a random password for ldapservice
    alphabet = string.ascii_letters + string.digits + '+-/,.-_^'
    svcpass = ''.join([secrets.choice(alphabet) for i in range(32)])

if 'hostname' in request: # Use given hostname (short)
    hostname = request['hostname'].lower()
else: # Build a default hostname for the DC
    hostname = os.environ['MODULE_ID'].replace('samba', 'dc')

agent.set_env('PROVISION_TYPE', provision_type)

# Save values of optional parameters
agent.set_env('NBDOMAIN', nbdomain)
agent.set_env('REALM', realm)
agent.set_env('HOSTNAME', hostname + '.' + realm.lower())

# JSON Schema mandatory fields. We are sure they are present.
agent.set_env('ADMINUSER', request['adminuser'])
agent.set_env('ADMINPASS', request['adminpass'])
agent.set_env('IPADDRESS', request['ipaddress'])

agent.set_env('SVCUSER', 'ldapservice')
agent.set_env('SVCPASS', svcpass)

agent.dump_env()
