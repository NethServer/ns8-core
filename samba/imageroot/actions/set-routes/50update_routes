#!/usr/bin/env python3

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import agent
import agent.tasks
import os
import sys
import json

#
# add/remove DC IP addresses to the cluster VPN
#

request = json.load(sys.stdin)

verb = "add" if request['use_cluster_vpn'] is True else 'remove'
routes = []

if 'realm' in request:
    realm = request['realm'].upper()
else:
    realm = os.environ['REALM']

if 'ipaddress' in request:
    routes.append({
        "network": request['ipaddress'] + '/32',
        "node_id": int(os.environ['NODE_ID'])
    })

rdb = agent.redis_connect()
for key in rdb.scan_iter(match='module/samba*/environment'):
    penv = rdb.hgetall(key)
    if penv.get('REALM') != realm:
        continue # skip DCs of other realms

    routes.append({
        "network": penv['IPADDRESS'] + '/32',
        "node_id": int(penv['NODE_ID']),
    })

update_routes_result = agent.tasks.run(
    agent_id='cluster',
    action='update-routes',
    data={ verb : routes },
)

agent.assert_exp(update_routes_result['exit_code'] == 0)

print("{}") # successful response
